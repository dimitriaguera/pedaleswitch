{"version":3,"sources":["../../../../server/api/composant/composant.integration.js"],"names":[],"mappings":"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","file":"composant.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newComposant;\n\ndescribe('Composant API:', function() {\n\n  describe('GET /api/composants', function() {\n    var composants;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/composants')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          composants = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      composants.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/composants', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/composants')\n        .send({\n          titre: 'led verte',\n          type: 'led',\n          description: 'on aime la led',\n          disponible: true,\n          prix_additionnel: 5,\n          dimensions: {x:1, y:2},\n          media: []\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newComposant = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created composant', function() {\n      newComposant.titre.should.equal('led verte');\n      newComposant.type.should.equal('led');\n      newComposant.description.should.equal('on aime la led');\n      newComposant.disponible.should.equal(true);\n      newComposant.prix_additionnel.should.equal(5);\n      newComposant.dimensions.x.should.equal(1);\n      newComposant.dimensions.y.should.equal(2);\n    });\n\n  });\n\n  describe('GET /api/composants/:id', function() {\n    var composant;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/composants/' + newComposant._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          composant = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      composant = {};\n    });\n\n    it('should respond with the requested composant', function() {\n      newComposant.titre.should.equal('led verte');\n      newComposant.type.should.equal('led');\n      newComposant.description.should.equal('on aime la led');\n      newComposant.disponible.should.equal(true);\n      newComposant.prix_additionnel.should.equal(5);\n      newComposant.dimensions.x.should.equal(1);\n      newComposant.dimensions.y.should.equal(2);\n    });\n\n  });\n\n  describe('PUT /api/composants/:id', function() {\n    var updatedComposant;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/composants/' + newComposant._id)\n        .send({\n          titre: 'Updated Composant',\n          description: 'This is the updated composant!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedComposant = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedComposant = {};\n    });\n\n    it('should respond with the updated composant', function() {\n      updatedComposant.titre.should.equal('Updated Composant');\n      updatedComposant.description.should.equal('This is the updated composant!!!');\n    });\n\n  });\n\n  describe('DELETE /api/composants/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/composants/' + newComposant._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when composant does not exist', function(done) {\n      request(app)\n        .delete('/api/composants/' + newComposant._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}