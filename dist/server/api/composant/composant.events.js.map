{"version":3,"sources":["../../../../server/api/composant/composant.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAI,kBAAkB,0BAAtB;;;AAGA,gBAAgB,eAAhB,CAAgC,CAAhC;;;AAGA,IAAI,SAAS;AACX,UAAQ,MADG;AAEX,YAAU;AAFC,CAAb;;;AAMA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,sBAAU,MAAV,CAAiB,IAAjB,CAAsB,CAAtB,EAAyB,UAAU,KAAV,CAAzB;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc;AACnB,oBAAgB,IAAhB,CAAqB,QAAQ,GAAR,GAAc,IAAI,GAAvC,EAA4C,GAA5C;AACA,oBAAgB,IAAhB,CAAqB,KAArB,EAA4B,GAA5B;AACD,GAHD;AAID;;kBAEc,e","file":"composant.events.js","sourcesContent":["/**\n * Composant model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Composant from './composant.model';\nvar ComposantEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nComposantEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'save': 'save',\n  'remove': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  Composant.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    ComposantEvents.emit(event + ':' + doc._id, doc);\n    ComposantEvents.emit(event, doc);\n  }\n}\n\nexport default ComposantEvents;\n"]}