{"version":3,"sources":["../../../../server/api/typeEffet/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAjB;;AAEA,IAAI,oBAAoB;AACtB,SAAO,qBADe;AAEtB,QAAM,oBAFgB;AAGtB,UAAQ,sBAHc;AAItB,UAAQ,sBAJc;AAKtB,WAAS;AALa,CAAxB;;AAQA,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EADU;AAEf,OAAK,MAAM,GAAN,EAFU;AAGf,SAAO,MAAM,GAAN,EAHQ;AAIf,QAAM,MAAM,GAAN,EAJS;AAKf,UAAQ,MAAM,GAAN;AALO,CAAjB;;;AASA,IAAI,iBAAiB,WAAW,YAAX,EAAyB;AAC5C,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP;AACD;AAHQ,GADiC;AAM5C,4BAA0B;AANkB,CAAzB,CAArB;;AASA,SAAS,uBAAT,EAAkC,YAAW;;AAE3C,KAAG,0CAAH,EAA+C,YAAW;AACxD,mBAAe,MAAf,CAAsB,KAAtB,CAA4B,UAA5B;AACD,GAFD;;AAIA,WAAS,qBAAT,EAAgC,YAAW;;AAEzC,OAAG,4CAAH,EAAiD,YAAW;AAC1D,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,qBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,2CAAH,EAAgD,YAAW;AACzD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,oBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,sBAAT,EAAiC,YAAW;;AAE1C,OAAG,6CAAH,EAAkD,YAAW;AAC3D,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,sBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,6CAAH,EAAkD,YAAW;AAC3D,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,sBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,2BAAT,EAAsC,YAAW;;AAE/C,OAAG,6CAAH,EAAkD,YAAW;AAC3D,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,sBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;;AAUA,WAAS,4BAAT,EAAuC,YAAW;;AAEhD,OAAG,8CAAH,EAAmD,YAAW;AAC5D,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,uBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB;AAGD,KAJD;AAMD,GARD;AAUD,CAlED","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar typeEffetCtrlStub = {\n  index: 'typeEffetCtrl.index',\n  show: 'typeEffetCtrl.show',\n  create: 'typeEffetCtrl.create',\n  update: 'typeEffetCtrl.update',\n  destroy: 'typeEffetCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar typeEffetIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './typeEffet.controller': typeEffetCtrlStub\n});\n\ndescribe('TypeEffet API Router:', function() {\n\n  it('should return an express router instance', function() {\n    typeEffetIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/typeEffets', function() {\n\n    it('should route to typeEffet.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'typeEffetCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/typeEffets/:id', function() {\n\n    it('should route to typeEffet.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'typeEffetCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/typeEffets', function() {\n\n    it('should route to typeEffet.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'typeEffetCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/typeEffets/:id', function() {\n\n    it('should route to typeEffet.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'typeEffetCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/typeEffets/:id', function() {\n\n    it('should route to typeEffet.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'typeEffetCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/typeEffets/:id', function() {\n\n    it('should route to typeEffet.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'typeEffetCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}