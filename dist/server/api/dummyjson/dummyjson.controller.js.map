{"version":3,"sources":["../../../../server/api/dummyjson/dummyjson.controller.js"],"names":[],"mappings":"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","file":"dummyjson.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/dummyjsons              ->  show\n * GET     /api/dummyjsons/:id          ->  show\n */\n\nimport tt from './dummyjson.events';\n\n'use strict';\nexport function show(req, res) {\n  var file = req.params.id || 'default';\n\n  return readfile(file)\n    .then(emitmes('lecture fichier ok'))\n    .then(makejson())\n    .then(emitmes('Transforme le template en string OK'))\n    .then(parseJson())\n    .then(emitmes('Parse Json Ok'))\n    .then(insertdbjson(res, file))\n    .then(emitmes('db rempli ok'))\n    .catch(handleError(res));\n}\n\nfunction readfile(file) {\n  return new Promise(function (resolve, reject) {\n    file = file || 'default';\n    var fs = require('fs');\n    fs.readFile(__dirname + '/' + file + '.hbs', {encoding: 'utf8'}, function(err, data) {\n      if (err) {\n        reject('Fichier modèle inexistant');\n        return;\n      }\n      console.log('Lecture fichier modèle ok');\n      resolve(data);\n    });\n  });\n}\n\nfunction makejson() {\n  return function(template) {\n    return new Promise(function (resolve, reject) {\n      try{\n        var dummyjson = require('dummy-json');\n\n        var myHelpers = {\n          composantType: function() {\n            // Use randomArrayItem to ensure the seeded random number generator is used\n            return dummyjson.utils.randomArrayItem(['Led', 'Potar', 'Transfo']);\n          },\n          effetType: function(){\n            return dummyjson.utils.randomArrayItem(['Disto', 'Delay', 'Reverb', 'Wawa']);\n          }\n        };\n\n        var result = dummyjson.parse(template, {helpers: myHelpers});\n        console.log('Random Template créé');\n        // console.log(result);\n        resolve(result);\n      }\n      catch(err) {\n        reject('Random Template non crée :' + err);\n      }\n    });\n  }\n}\n\nfunction parseJson() {\n  return function(json) {\n    return new Promise(function (resolve, reject) {\n      try{\n        // preserve newlines, etc - use valid JSON\n        json = json.replace(/\\\\n/g, \"\\\\n\")\n          .replace(/\\\\'/g, \"\\\\'\")\n          .replace(/\\\\\"/g, '\\\\\"')\n          .replace(/\\\\&/g, \"\\\\&\")\n          .replace(/\\\\r/g, \"\\\\r\")\n          .replace(/\\\\t/g, \"\\\\t\")\n          .replace(/\\\\b/g, \"\\\\b\")\n          .replace(/\\\\f/g, \"\\\\f\");\n        // remove non-printable and other non-valid JSON chars\n        json = json.replace(/[\\u0000-\\u0019]+/g,\"\");\n        json = JSON.parse(json);\n        resolve(json);\n        console.log('Parse Json ok');\n      }\n      catch(err) {\n        reject('Problème Parse Json :' + err);\n      }\n    });\n  };\n}\n\nfunction insertdbjson(res, file) {\n  file = file || 'default';\n  return function(json){\n    return new Promise(function (resolve, reject) {\n      var db = require('../' + file + '/' + file + '.model').default;\n      db.insertMany(json, function (err, data) {\n        if (err) {\n          reject('Problème insertion db :' + err);\n          return;\n        }\n        resolve('insert db ok');\n        console.log('Insertion db ok');\n        //console.dir(obj);\n        res.status(204).end();\n      });\n    });\n  };\n}\n\nfunction handleError(res) {\n  return function(err) {\n    console.log(err);\n    res.status(500).send(err);\n  };\n}\n\nfunction emitmes(mess) {\n  return function (entity) {\n    return new Promise(function (resolve, reject) {\n      tt.emit('message', mess);\n      resolve(entity);\n    });\n  };\n}"]}