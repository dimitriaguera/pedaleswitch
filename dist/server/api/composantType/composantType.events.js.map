{"version":3,"sources":["../../../../server/api/composantType/composantType.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAI,sBAAsB,0BAA1B;;;AAGA,oBAAoB,eAApB,CAAoC,CAApC;;;AAGA,IAAI,SAAS;AACX,UAAQ,MADG;AAEX,YAAU;AAFC,CAAb;;;AAMA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,0BAAc,MAAd,CAAqB,IAArB,CAA0B,CAA1B,EAA6B,UAAU,KAAV,CAA7B;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc;AACnB,wBAAoB,IAApB,CAAyB,QAAQ,GAAR,GAAc,IAAI,GAA3C,EAAgD,GAAhD;AACA,wBAAoB,IAApB,CAAyB,KAAzB,EAAgC,GAAhC;AACD,GAHD;AAID;;kBAEc,mB","file":"composantType.events.js","sourcesContent":["/**\n * ComposantType model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport ComposantType from './composantType.model';\nvar ComposantTypeEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nComposantTypeEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  'save': 'save',\n  'remove': 'remove'\n};\n\n// Register the event emitter to the model events\nfor (var e in events) {\n  var event = events[e];\n  ComposantType.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    ComposantTypeEvents.emit(event + ':' + doc._id, doc);\n    ComposantTypeEvents.emit(event, doc);\n  }\n}\n\nexport default ComposantTypeEvents;\n"]}