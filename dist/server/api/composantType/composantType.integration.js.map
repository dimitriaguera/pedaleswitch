{"version":3,"sources":["../../../../server/api/composantType/composantType.integration.js"],"names":[],"mappings":"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","file":"composantType.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newComposantType;\n\ndescribe('ComposantType API:', function() {\n\n  describe('GET /api/composantTypes', function() {\n    var composantTypes;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/composantTypes')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          composantTypes = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      composantTypes.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/composantTypes', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/composantTypes')\n        .send({\n          titre: 'New ComposantType',\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newComposantType = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created composantType', function() {\n      newComposantType.titre.should.equal('New ComposantType');\n    });\n\n  });\n\n  describe('GET /api/composantTypes/:id', function() {\n    var composantType;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/composantTypes/' + newComposantType._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          composantType = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      composantType = {};\n    });\n\n    it('should respond with the requested composantType', function() {\n      composantType.titre.should.equal('New ComposantType');\n    });\n\n  });\n\n  describe('PUT /api/composantTypes/:id', function() {\n    var updatedComposantType;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/composantTypes/' + newComposantType._id)\n        .send({\n          titre: 'Updated ComposantType',\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedComposantType = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedComposantType = {};\n    });\n\n    it('should respond with the updated composantType', function() {\n      updatedComposantType.titre.should.equal('Updated ComposantType');\n    });\n\n  });\n\n  describe('DELETE /api/composantTypes/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/composantTypes/' + newComposantType._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when composantType does not exist', function(done) {\n      request(app)\n        .delete('/api/composantTypes/' + newComposantType._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}